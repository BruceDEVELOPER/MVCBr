unit TestoData;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, System.SysUtils, System.Generics.collections, System.Classes,
  oData.Interf, oData.Parse, oData.Engine;

type
  // Test methods for class TODataParse

  TestTODataParse = class(TTestCase)
  strict private
    FODataParse: IODataParse;
  private
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestParse;
    procedure TestParseWithParams;
    procedure TestParseWithFilter;
    procedure TestParseWithGroupBy;
  end;

implementation

procedure TestTODataParse.SetUp;
begin
  FODataParse := TODataParse.Create;
end;

procedure TestTODataParse.TearDown;
begin
  //FODataParse.Free;
  FODataParse := nil;
end;

procedure TestTODataParse.TestParse;
var
  URL: string;
begin
  // TODO: Setup method call parameters
  URL:='produtos(1)/grupos(123)?$select=nome&$top=10&$skip=3';
  FODataParse.Parse(URL);
  checkTrue(FODataParse.oData.Resource='produtos');

  checkTrue(FODataParse.oData.ResourceParams.ValueOfIndex(0)='1');

  checkTrue(FODataParse.oData.Child.Resource='grupos' );
  checkTrue(FODataParse.oData.Child.ResourceParams.ValueOfIndex(0)='123');

  checkTrue(FODataParse.oData.Select='nome');

  checkTrue(FODataParse.oData.top=10);
  checkTrue(FODataParse.oData.skip=3);

end;


procedure TestTODataParse.TestParseWithFilter;
var URL:string;
begin
  URL:='produtos?$filter=codigo eq 123';
  FODataParse.Parse(URL);
  checkTrue(FODataParse.oData.filter='codigo eq 123');

end;

procedure TestTODataParse.TestParseWithGroupBy;
var URL:string;
begin
  URL:='produtos?$filter=codigo eq 123&groupby=codigo';
  FODataParse.Parse(URL);
  checkTrue(FODataParse.oData.filter='codigo eq 123');

  checkTrue(FODataParse.oData.GroupBy='codigo');

end;

procedure TestTODataParse.TestParseWithParams;
var
  URL: string;
begin
  // TODO: Setup method call parameters
  URL:='produtos(codigo=1234 and nome gt ''maria'')/grupos(codigo=123 and nome eq ''joao'')?$select=nome&$top=10&$skip=3';
  FODataParse.Parse(URL);
  checkTrue(FODataParse.oData.Resource='produtos');

  checkTrue(FODataParse.oData.ResourceParams.KeyOfIndex(0)='codigo', 'produtos Key 0 falhou');
  checkTrue(FODataParse.oData.ResourceParams.ValueOfIndex(0)='1234', 'produtos Value 0 falhou');
  checkTrue(FODataParse.oData.ResourceParams.OperatorLinkOfIndex(1)=' and ', 'produtos OperatorLink 1 falhou');
  checkTrue(FODataParse.oData.ResourceParams.OperatorOfIndex(1)=' > ', 'produtos Operator 1 falhou');
  checkTrue(FODataParse.oData.ResourceParams.KeyOfIndex(1)='nome','produtos Key 1 falhou');
  checkTrue(FODataParse.oData.ResourceParams.ValueOfIndex(1)='''maria''', 'produtos  Value 1 falhou');

  checkTrue(FODataParse.oData.Child.Resource='grupos' );
  checkTrue(FODataParse.oData.Child.ResourceParams.KeyOfIndex(0)='codigo', 'grupos Key 0 falhou');
  checkTrue(FODataParse.oData.Child.ResourceParams.ValueOfIndex(0)='123', 'grupos Value 0 falhou');
  checkTrue(FODataParse.oData.Child.ResourceParams.OperatorLinkOfIndex(1)=' and ', 'grupos OperatorLink 1 falhou');
  checkTrue(FODataParse.oData.Child.ResourceParams.OperatorOfIndex(1)=' = ', 'grupos Operator 1 falhou');
  checkTrue(FODataParse.oData.Child.ResourceParams.KeyOfIndex(1)='nome','grupos Key 1 falhou');
  checkTrue(FODataParse.oData.Child.ResourceParams.ValueOfIndex(1)='''joao''', 'grupos  Value 1 falhou');


  checkTrue(FODataParse.oData.Select='nome');

  checkTrue(FODataParse.oData.top=10);
  checkTrue(FODataParse.oData.skip=3);

end;



initialization
  // Register any test cases with the test runner
  RegisterTest(TestTODataParse.Suite);
end.

